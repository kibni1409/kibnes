{"version":3,"sources":["Component/Body/RightBar/Users/Users.module.css","Component/Body/LeftBar/LeftBar.module.css","Component/Body/RightBar/Profile/Posts/AreaPost/AreaPost.module.css","Component/Body/RightBar/Messages/Chat/AreaMessage/AreaMessage.module.css","IMG/1_1WCjO1iYMo7J7Upp8KMfLA@2x.jpeg","Component/Body/RightBar/Profile/Profile.module.css","Component/Header/Header.module.css","App.module.css","Component/Body/Body.module.css","Component/Body/RightBar/RightBar.module.css","IMG/XOsX.gif","Component/Body/RightBar/Profile/Posts/Posts.module.css","Component/Body/RightBar/Profile/Posts/Post/Post.module.css","Component/Body/RightBar/Messages/Messages.module.css","Component/Body/RightBar/Messages/Chat/Chat.module.css","Component/Body/RightBar/Messages/Chat/Message/Message.module.css","Component/Body/RightBar/Messages/Dialogs/Dialogs.module.css","Component/Body/RightBar/Messages/Dialogs/Dialog/Dialog.module.css","Component/Footer/Footer.module.css","Redux/MessageReducer.js","DAL/API.js","Redux/ProfileReducer.js","Redux/UsersReducer.js","Redux/AuthReducer.js","Redux/Store-redux.js","Component/Body/LeftBar/LeftBar.js","Component/Body/Preloader.js","Component/Body/RightBar/Pagination.js","Component/Body/RightBar/Users/Users.js","Component/Body/RightBar/Users/UsersAPI.js","Redux/Selectors.js","Component/Body/RightBar/Users/UsersContainer.js","Component/Body/RightBar/Profile/Posts/AreaPost/AreaPost.js","Component/Body/RightBar/Profile/Posts/AreaPost/AreaPostContainer.js","Component/Body/RightBar/Profile/Posts/Post/Post.js","Component/Body/RightBar/Profile/Posts/Posts.js","Component/Body/RightBar/Profile/Posts/PostContainer.js","Component/Body/RightBar/Profile/ProfileStatus.js","Component/Body/RightBar/Profile/Profile.js","Component/Body/RightBar/Profile/ProfileAPI.js","HOC/withAuthRedirect.js","Component/Body/RightBar/Profile/ProfileContainer.js","Component/Body/RightBar/Messages/Chat/Message/Message.js","Component/Body/RightBar/Messages/Chat/Chat.js","Component/Body/RightBar/Messages/Chat/ChatContainer.js","Component/Body/RightBar/Messages/Dialogs/Dialog/Dialog.js","Component/Body/RightBar/Messages/Dialogs/Dialogs.js","Component/Body/RightBar/Messages/Dialogs/DialogsContainer.js","Component/Body/RightBar/Messages/Chat/AreaMessage/AreaMessage.js","Component/Body/RightBar/Messages/Chat/AreaMessage/AreaMessageContainer.js","Component/Body/RightBar/Messages/Messages.js","Component/Body/RightBar/Messages/MessagesContainer.js","Component/Body/RightBar/Login/LoginForm.js","Component/Body/RightBar/Login/LoginContainer.js","Component/Body/RightBar/RightBar.js","Component/Body/Body.js","Component/Footer/Footer.js","Component/Header/Header.js","Component/Header/HeaderContainer.js","App.js","index.js"],"names":["module","exports","img","user","active","pagination","leftbar_wrapper","item","areapost","textarea","textareaDiv","button","buttonDiv","area_message","__webpack_require__","p","profile","info","header_wrapper","login","app_wrapper","body_wrapper","rightbar","leftbar","rightbar_wrapper","post","messages","chat","message","dialogs","dialog","footer_wrapper","initialState","id","name","idDialog","MessageReducer","state","arguments","length","undefined","action","type","size","Object","objectSpread","concat","toConsumableArray","text","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","userID","then","resronse","data","delete","pageCount","sizePage","get","profileAPI","email","password","rememberMe","status","put","posts","isFetching","StatusAction","IsFeatchingF","bool","ProfileReducer","sizePosts","users","totalCount","totalPages","countDoteStart","countDoteEnd","setPageCount","count","setUsers","setTotalCount","UsersReducer","map","u","follow","dote","isAuth","Error","SetUserDataAC","AuthMeThunk","_ref","asyncToGenerator","AuthReducer_regeneratorRuntime","mark","_callee","dispatch","response","wrap","_context","prev","next","sent","resultCode","stop","_x","apply","this","AutchReducer","reducers","combineReducers","MessagePage","ProfilePage","UsersPage","Auth","AuthReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","LeftBar","react_default","a","createElement","className","classes","react_router_dom","to","Preloader","alt","src","preloader","Pagination","props","pages","onClick","onPageChange","key","setcountDoteStart","setcountDoteEnd","Users","Fragment","Body_Preloader","RightBar_Pagination","photos","small","userPhoto","followed","unFollowUserThunk","FollowUserThunk","UsersAPI","UsersType","useParams","useEffect","setUsersThunk","setFriendsThunk","react_router","AllpageCount","Math","ceil","settotalPages","i","push","RightBar_Users_Users","assign","getIsAuth","getError","getProfile","getUserId","getIsFetching","getStatus","getDialogs","getMessage","getPosts","getUsers","getTotalCountUsers","getPageCountUsers","getSizePageUsers","getTotalPages","compose","connect","setTotalPages","setCountDoteStart","setCountDoteEnd","UsersReducer_regeneratorRuntime","items","_ref4","_callee4","_context4","_x4","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","AreaPost","_useForm","useForm","register","handleSubmit","reset","formState","errors","onSubmit","AddPost","TextPost","placeholder","required","minLength","maxLength","AreaMessageContainer","AddPostAction","Post","Posts","ElementPost","Posts_Post_Post","PostContainer","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","autoFocus","onChange","e","currentTarget","value","onBlur","onDoubleClick","Profile","large","ava","userId","fullName","Profile_ProfileStatus","setStatusProfileThunk","Posts_PostContainer","AreaPostContainer","ProfileAPI","InfoProfileThunk","getStatusProfileThunk","RightBar_Profile_Profile","mapStateToProps","withAuthRedirect","Component","location","useLocation","console","log","from","_regeneratorRuntime","Message","Chat","MessagesElement","Message_elements","Chat_Message_Message","ChatContainer","Dialog","Dialogs","DialogsElements","Dialog_elements","Dialogs_Dialog_Dialog","DialogsContainer","AreaMessage","MessageText","AddMessageAction","Messages","Dialogs_DialogsContainer","Chat_ChatContainer","AreaMessage_AreaMessageContainer","LoginForm","navigate","useNavigate","pathname","replace","error","LoginThunk","RightBar","path","element","ProfileContainer","MessagesContainer","UsersContainer","LoginContainer","Body","Body_LeftBar_LeftBar","Body_RightBar_RightBar","Footer","Header","logout","Component_Header_Header","App","Header_HeaderContainer","Component_Body_Body","Component_Footer_Footer","React","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_redux_es","src_App"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,IAAA,mBAAAC,KAAA,oBAAAC,OAAA,sBAAAC,WAAA,+CCAlBL,EAAAC,QAAA,CAAkBK,gBAAA,iCAAAC,KAAA,sBAAAH,OAAA,6CCAlBJ,EAAAC,QAAA,CAAkBO,SAAA,2BAAAC,SAAA,2BAAAC,YAAA,8BAAAC,OAAA,yBAAAC,UAAA,iDCAlBZ,EAAAC,QAAA,CAAkBY,aAAA,kCAAAJ,SAAA,8BAAAE,OAAA,iDCDlBX,EAAAC,QAAiBa,EAAAC,EAAuB,6ECCxCf,EAAAC,QAAA,CAAkBe,QAAA,yBAAAC,KAAA,2CCAlBjB,EAAAC,QAAA,CAAkBiB,eAAA,+BAAAC,MAAA,2CCAlBnB,EAAAC,QAAA,CAAkBmB,YAAA,8CCAlBpB,EAAAC,QAAA,CAAkBoB,aAAA,2BAAAC,SAAA,uBAAAC,QAAA,2CCAlBvB,EAAAC,QAAA,CAAkBuB,iBAAA,wDCDlBxB,EAAAC,QAAiBa,EAAAC,EAAuB,qDCCxCf,EAAAC,QAAA,CAAkBwB,KAAA,yCCAlBzB,EAAAC,QAAA,CAAkBwB,KAAA,wCCAlBzB,EAAAC,QAAA,CAAkByB,SAAA,gDCAlB1B,EAAAC,QAAA,CAAkB0B,KAAA,wCCAlB3B,EAAAC,QAAA,CAAkB2B,QAAA,8CCAlB5B,EAAAC,QAAA,CAAkB4B,QAAA,8CCAlB7B,EAAAC,QAAA,CAAkB6B,OAAA,uBAAA1B,OAAA,4CCAlBJ,EAAAC,QAAA,CAAkB8B,eAAA,mLCCdC,EAAe,CACXH,QAAS,CACL,CAACI,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,WAElBR,SAAU,CACN,CAACO,GAAI,EAAGL,QAAS,KAAMO,SAAU,GACjC,CAACF,GAAI,EAAGL,QAAS,KAAMO,SAAU,GACjC,CAACF,GAAI,EAAGL,QAAS,SAAUO,SAAU,GACrC,CAACF,GAAI,EAAGL,QAAS,KAAMO,SAAU,GACjC,CAACF,GAAI,EAAGL,QAAS,YAAaO,SAAU,GACxC,CAACF,GAAI,EAAGL,QAAS,UAAWO,SAAU,KA0BnCC,EAtBM,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACX,IApBW,uBAqBP,IAAIC,EAAON,EAAMX,SAASa,OAC1B,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GACAP,EACAA,EAAMX,SAFb,CAGIA,SAAQ,GAAAoB,OAAAF,OAAAG,EAAA,EAAAH,CAAMP,EAAMX,UAAZ,CAAsB,CAACO,GAAIU,EAAMf,QAASa,EAAOO,KAAMb,SAAU,OAGjF,QACI,OAAOE,WC3BbY,QAAWC,OAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACLC,UAAY,0CAKPC,EAAW,SACZC,GACJ,OAAOP,EAASxB,KAAK,UAAY+B,GAAQC,KACrC,SAAAC,GAAQ,OAAIA,EAASC,QAHpBJ,EAAW,SAMVC,GACN,OAAOP,EAASW,OAAO,UAAYJ,GAAQC,KACvC,SAAAC,GAAQ,OAAIA,EAASC,QARpBJ,EAAW,SAgBVM,EAAWC,GACjB,OAAOb,EAASc,IAAT,cAAAjB,OAA2Be,EAA3B,WAAAf,OAA8CgB,IAAYL,KAC7D,SAAAC,GAAQ,OAAIA,EAASC,QAlBpBJ,EAAW,SAqBRM,EAAWC,GACnB,OAAOb,EAASc,IAAT,cAAAjB,OAA2Be,EAA3B,WAAAf,OAA8CgB,EAA9C,iBAAsEL,KACzE,SAAAC,GAAQ,OAAIA,EAASC,QAKpBK,EAAa,WAElB,OAAOf,EAASc,IAAT,WAAwBN,KAC3B,SAAAC,GAAQ,OAAIA,EAASC,QAHpBK,EAAa,SAOfC,EAAOC,EAAUC,GACpB,OAAOlB,EAASxB,KAAT,aAA4B,CAACwC,QAAOC,WAAUC,eAAaV,KAC9D,SAAAC,GAAQ,OAAIA,EAASC,QATpBK,EAAa,WAalB,OAAOf,EAASW,OAAT,cAA8BH,KACjC,SAAAC,GAAQ,OAAIA,EAASC,QAdpBK,EAAa,SAiBVR,GACR,OAAOP,EAASc,IAAT,WAAAjB,OAAwBU,IAAUC,KACrC,SAAAC,GAAQ,OAAIA,EAASC,QAnBpBK,EAAa,SAsBLR,GACb,OAAOP,EAASc,IAAT,kBAAAjB,OAA+BU,KAvBjCQ,EAAa,SAyBLI,GACb,OAAOnB,EAASoB,IAAT,iBAA8B,CACjCD,OAAQA,sxMChEpB,IAKIpC,EAAe,CACfsC,MAAO,CACH,CAACrC,GAAI,EAAGe,KAAM,gBACd,CAACf,GAAI,EAAGe,KAAM,cACd,CAACf,GAAI,EAAGe,KAAM,kBAElBhC,QAAS,KACToD,OAAQ,GACRG,YAAY,GA+CHC,EAAe,SAACJ,GACzB,MAAO,CACH1B,KAAM,qBACN0B,OAAQA,IAGHK,EAAe,SAACC,GACzB,MAAO,CACHhC,KAAM,+BACN6B,WAAYG,IAiCLC,EAtFQ,WAAkC,IAAjCtC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACX,IAlBS,mBAmBL,IAAIkC,EAAYvC,EAAMiC,MAAM/B,OAC5B,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIiC,MAAK,GAAAxB,OAAAF,OAAAG,EAAA,EAAAH,CAAMP,EAAMiC,OAAZ,CAAmB,CAACrC,GAAI2C,EAAW5B,KAAMP,EAAOO,UAG7D,IAxBY,sBAyBR,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIrB,QAASyB,EAAOzB,UAGxB,IA7BW,qBA8BP,OAAO4B,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEI+B,OAAQ3B,EAAO2B,SAGvB,IAlCqB,+BAmCjB,OAAOxB,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIkC,WAAY9B,EAAO8B,aAG3B,QACI,OAAOlC,qxMC5CnB,IASIL,EAAe,CACf6C,MAAO,GACPC,WAAY,EACZjB,UAAW,EACXC,SAAU,GACVS,YAAY,EACZQ,WAAY,EACZC,gBAAgB,EAChBC,cAAc,GAiFLC,EAAe,SAACC,GACzB,MAAO,CACHzC,KAAM,uBACNmB,UAAWsB,IAGNC,EAAW,SAACP,GACrB,MAAO,CACHnC,KAAM,kBACNmC,MAAOA,IAGFQ,EAAgB,SAACF,GAC1B,MAAO,CACHzC,KAAM,wBACNoC,WAAYK,IAGPV,EAAe,SAACC,GACzB,MAAO,CACHhC,KAAM,qBACN6B,WAAYG,IAqELY,EAxKI,WAAkC,IAAjCjD,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOC,MACX,IAtBK,eAuBD,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GACAP,EACAA,EAAMwC,MAFb,CAGIA,MAAOxC,EAAMwC,MAAMU,IAAI,SAAAC,GACnB,OAAIA,EAAEvD,KAAOQ,EAAOe,OACTZ,OAAAC,EAAA,EAAAD,CAAA,GAAI4C,EAAX,CAAcC,OAAQhD,EAAOA,SAE1B+C,MAInB,IAjCQ,kBAkCJ,OAAO5C,OAAAC,EAAA,EAAAD,CAAA,GACAP,EACAA,EAAMwC,MAFb,CAGIA,MAAOpC,EAAOoC,QAGtB,IAvCa,uBAwCT,OAAOjC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIwB,UAAWpB,EAAOoB,YAG1B,IA5Cc,wBA6CV,OAAOjB,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIyC,WAAYrC,EAAOqC,aAG3B,IAjDW,qBAkDP,OAAOlC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIkC,WAAY9B,EAAO8B,aAG3B,IAtDU,oBAuDN,OAAO3B,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEI0C,WAAYtC,EAAOsC,aAG3B,IA3De,yBA4DX,OAAOnC,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEI2C,eAAgBvC,EAAOiD,OAI/B,IAjEa,uBAkET,OAAO9C,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEI4C,aAAcxC,EAAOiD,OAI7B,QACI,OAAOrD,qxMChFnB,IAGIL,EAAe,CACfb,MAAO,KACPqC,OAAQ,KACRS,MAAO,KACP0B,QAAQ,EACRC,MAAO,MAyBEC,EAAgB,SAACrC,EAAQrC,EAAO8C,EAAO0B,GAChD,MAAO,CACHjD,KAAM,qBACND,OAAQ,CAACe,SAAQrC,QAAO8C,QAAO0B,YAU1BG,EAAc,WACvB,sBAAAC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAqD,IAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBzC,IADlB,OAEyB,KADxBqC,EADDE,EAAAG,MAEUC,YACTP,EAASP,EAAcQ,EAAS1C,KAAK1B,GAAIoE,EAAS1C,KAAKxC,MAAOkF,EAAS1C,KAAKM,OAAO,IAHpF,wBAAAsC,EAAAK,SAAAT,MAAP,gBAAAU,GAAA,OAAAd,EAAAe,MAAAC,KAAAzE,YAAA,IA0BW0E,EA9DI,WAAkC,IAAjC3E,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOC,MACX,IAbc,qBAcV,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIlB,MAAOsB,EAAOA,OAAOtB,MACrBqC,OAAQf,EAAOA,OAAOe,OACtBS,MAAOxB,EAAOA,OAAOwB,MACrB0B,OAAQlD,EAAOA,OAAOkD,SAG9B,IArBU,iBAsBN,OAAO/C,OAAAC,EAAA,EAAAD,CAAA,GACAP,EADP,CAEIuD,MAAOnD,EAAOb,UAGtB,QACI,OAAOS,oBCvBf4E,EAAWC,0BAAgB,CAC3BC,YAAa/E,EACbgF,YAAazC,EACb0C,UAAW/B,EACXgC,KAAMC,IAGJC,EAAQC,sBAAYR,EAASS,8BAAoBC,0BAAgBC,OAEvEC,OAAOL,MAAQA,EAEAA,gICKAM,GApBC,WACZ,OACQC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ7H,iBACpByH,EAAAC,EAAAC,cAAA,OAAMC,UAAS,GAAApF,OAAKqF,KAAQ5H,KAAb,MAAAuC,OAAsBqF,KAAQ/H,SACzC2H,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAAUC,GAAG,eAAb,YAEJN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ5H,MACpBwH,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAASC,GAAG,aAAZ,aAEJN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ5H,MACpBwH,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAASC,GAAG,cAAZ,UAEJN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ5H,MACpBwH,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAASC,GAAG,kBAAZ,8GCNLC,GARG,WACd,OACIP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKM,IAAI,MAAMC,IAAKC,SC4CjBC,GA/CI,SAACC,GAChB,OACAZ,EAAAC,EAAAC,cAAA,WAEQU,EAAMC,MAAMrD,IAAI,SAAAxE,GACZ,OAAU,IAANA,EACOgH,EAAAC,EAAAC,cAAA,QAAMY,QAAS,WAClBF,EAAMG,aAAa/H,IACpBgI,IAAKhI,EACKmH,UAAWS,EAAM9E,YAAc9C,EAAIoH,KAAQ/H,OAAS+H,KAAQ9H,YAAaU,IAGrF,EAAIA,GAAOA,GAAK4H,EAAM9E,UAAY,GACnC8E,EAAMK,mBAAkB,IAEE,IAAzBL,EAAM3D,gBAA6B2D,EAAM9E,UAAY,IAAM9C,EACrDgH,EAAAC,EAAAC,cAAA,QAAMc,IAAKhI,GAAX,QAGN4H,EAAM5D,WAAahE,GAAOA,GAAK4H,EAAM9E,UAAY,GAClD8E,EAAMM,iBAAgB,IAEE,IAAvBN,EAAM1D,cAA2B0D,EAAM9E,UAAY,IAAM9C,GAAO4H,EAAM9E,UAAY,IAAM8E,EAAM5D,WACxFgD,EAAAC,EAAAC,cAAA,QAAMc,IAAKhI,GAAX,OAGP4H,EAAM9E,UAAY,IAAM9C,GAAK4H,EAAM9E,UAAY,IAAM9C,GAAK4H,EAAM9E,YAAc9C,GAAK4H,EAAM9E,UAAY,IAAM9C,GAAK4H,EAAM9E,UAAY,IAAM9C,EACjIgH,EAAAC,EAAAC,cAAA,QAAMY,QAAS,WAClBF,EAAMG,aAAa/H,IACpBgI,IAAKhI,EACKmH,UAAWS,EAAM9E,YAAc9C,EAAIoH,KAAQ/H,OAAS+H,KAAQ9H,YAAaU,GAGtF4H,EAAM5D,aAAehE,EACdgH,EAAAC,EAAAC,cAAA,QAAMY,QAAS,WAClBF,EAAMG,aAAa/H,IACpBgI,IAAKhI,EACKmH,UAAWS,EAAM9E,YAAc9C,EAAIoH,KAAQ/H,OAAS+H,KAAQ9H,YAAaU,QAJ1F,QCMDmI,GAnCD,SAACP,GACX,OACIZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACKR,EAAMpE,WAAawD,EAAAC,EAAAC,cAACmB,GAAD,MAAe,KACnCrB,EAAAC,EAAAC,cAACoB,GAAeV,GAFpB,IAIQA,EAAM9D,MAAMU,IAAI,SAAApF,GAAI,OAAIwI,EAAMpE,WAAa,KAAOwD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQhI,KAAM4I,IAAK5I,EAAK8B,IAClF8F,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAASC,GAAI,YAAclI,EAAK8B,IAC5B8F,EAAAC,EAAAC,cAAA,OAAKM,IAAI,MAAMC,IAA0B,MAArBrI,EAAKmJ,OAAOC,MAAgBpJ,EAAKmJ,OAAOC,MAAQC,KAC/DtB,UAAWC,KAAQjI,OAE5B6H,EAAAC,EAAAC,cAAA,WACK9H,EAAK+B,MAGV6F,EAAAC,EAAAC,cAAA,WACK9H,EAAKsJ,SACA1B,EAAAC,EAAAC,cAAA,UAAQY,QAAS,WACfF,EAAMe,kBAAkBvJ,EAAK8B,KAC1B0G,EAAMpE,YAAoBoE,EAAMG,aAAaH,EAAM9E,aAFxD,YAIAkE,EAAAC,EAAAC,cAAA,UAAQY,QAAS,WACfF,EAAMgB,gBAAgBxJ,EAAK8B,KACxB0G,EAAMpE,YAAoBoE,EAAMG,aAAaH,EAAM9E,aAFxD,gBCoBnB+F,GA5CE,SAACjB,GAAS,IAClBkB,EAAaC,eAAbD,UAMLE,oBAAW,WACU,QAAdF,EAEClB,EAAMqB,cAAc,EAAGrB,EAAM7E,UAEX,YAAd+F,EACJlB,EAAMsB,gBAAgB,EAAGtB,EAAM7E,UAT5BiE,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAU7B,GAAG,OAYtB,CAACwB,IAEH,IASIM,EAAeC,KAAKC,KAAK1B,EAAM7D,WAAa6D,EAAM7E,UACtD6E,EAAM2B,cAAcH,GAGpB,IAFA,IAAIvB,EAAQ,GAEH2B,EAAI,EAAGA,GAAKJ,EAAcI,IAC/B3B,EAAM4B,KAAKD,GAGf,OACIxC,EAAAC,EAAAC,cAACwC,GAAD7H,OAAA8H,OAAA,CACI9B,MAAOA,EACPE,aApBW,SAAC3D,GACC,QAAd0E,GACClB,EAAMqB,cAAc7E,EAAOwD,EAAM7E,UAEpB,YAAd+F,GACClB,EAAMsB,gBAAgB9E,EAAOwD,EAAM7E,YAgB/B6E,KC3CHgC,GAAY,SAACtI,GACtB,OAAOA,EAAMiF,KAAK3B,QAETiF,GAAW,SAACvI,GACrB,OAAOA,EAAMiF,KAAK1B,OAETiF,GAAa,SAACxI,GACvB,OAAOA,EAAM+E,YAAYpG,SAEhB8J,GAAY,SAACzI,GACtB,OAAOA,EAAMiF,KAAK9D,QAETuH,GAAgB,SAAC1I,GAC1B,OAAOA,EAAMgF,UAAU9C,YAEdyG,GAAY,SAAC3I,GACtB,OAAOA,EAAM+E,YAAYhD,QAEhB6G,GAAa,SAAC5I,GACvB,OAAOA,EAAM8E,YAAYtF,SAEhBqJ,GAAa,SAAC7I,GACvB,OAAOA,EAAM8E,YAAYzF,UAEhByJ,GAAW,SAAC9I,GACrB,OAAOA,EAAM+E,YAAY9C,OAEhB8G,GAAW,SAAC/I,GACrB,OAAOA,EAAMgF,UAAUxC,OAEdwG,GAAqB,SAAChJ,GAC/B,OAAOA,EAAMgF,UAAUvC,YAEdwG,GAAoB,SAACjJ,GAC9B,OAAOA,EAAMgF,UAAUxD,WAEd0H,GAAmB,SAAClJ,GAC7B,OAAOA,EAAMgF,UAAUvD,UAEd0H,GAAgB,SAACnJ,GAC1B,OAAOA,EAAMgF,UAAUtC,YC8BZ0G,qBACXC,aAlDkB,SAACrJ,GAGpB,MAAO,CACHwC,MAAOuG,GAAS/I,GAChByC,WAAYuG,GAAmBhJ,GAC/BwB,UAAWyH,GAAkBjJ,GAC7ByB,SAAUyH,GAAiBlJ,GAC3BkC,WAAYwG,GAAc1I,GAC1B0C,WAAYyG,GAAcnJ,GAC1B2C,eAAgB3C,EAAMgF,UAAUrC,eAChCC,aAAc5C,EAAMgF,UAAUpC,aAC9BU,OAAQgF,GAAUtI,KAIA,SAAC+D,GACtB,MAAO,CACHlB,aAAc,SAACC,GACX,IAAI1C,EAASyC,EAAaC,GAC1BiB,EAAS3D,IAEb6H,cAAe,SAACnF,GACZ,IAAI1C,ETgFa,SAAC0C,GAC1B,MAAO,CACHzC,KAAM,oBACNqC,WAAYI,GSnFKwG,CAAcxG,GAC3BiB,EAAS3D,IAEbuG,kBAAmB,SAACtD,GAChB,IAAIjD,ETkFiB,SAACiD,GAC9B,MAAO,CACHhD,KAAM,yBACNgD,KAAMA,GSrFWkG,CAAkBlG,GAC/BU,EAAS3D,IAEbwG,gBAAiB,SAACvD,GACd,IAAIjD,EToFe,SAACiD,GAC5B,MAAO,CACHhD,KAAM,uBACNgD,KAAMA,GSvFWmG,CAAgBnG,GAC7BU,EAAS3D,IAEbuH,cAAe,SAACnG,EAAWC,GACvBsC,ETuFiB,SAACvC,EAAWC,GACrC,sBAAAiC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAkJ,IAAA5F,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAyF,IAAAxF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHL,EAAS3B,GAAa,IADnB8B,EAAAE,KAAA,EAEkBlD,EAAkBM,EAAWC,GAF/C,OAECuC,EAFDE,EAAAG,KAGHN,EAAS3B,GAAa,IACtB2B,EAAShB,EAASiB,EAAS0F,QAC3B3F,EAASlB,EAAarB,IACtBuC,EAASf,EAAcgB,EAASvB,aAN7B,wBAAAyB,EAAAK,SAAAT,MAAP,gBAAAU,GAAA,OAAAd,EAAAe,MAAAC,KAAAzE,YAAA,GSxFiB0H,CAAcnG,EAAWC,KAEtCmG,gBAAiB,SAACpG,EAAWC,GACzBsC,ETuHmB,SAACvC,EAAWC,GACvC,sBAAAkI,EAAApJ,OAAAoD,EAAA,EAAApD,CAAAkJ,IAAA5F,KAAO,SAAA+F,EAAM7F,GAAN,IAAAC,EAAA,OAAAyF,IAAAxF,KAAA,SAAA4F,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAzF,MAAA,cACHL,EAAS3B,GAAa,IADnByH,EAAAzF,KAAA,EAEkBlD,EAAoBM,EAAWC,GAFjD,OAECuC,EAFD6F,EAAAxF,KAGHN,EAAS3B,GAAa,IACtB2B,EAAShB,EAASiB,EAAS0F,QAC3B3F,EAASlB,EAAarB,IACtBuC,EAASf,EAAcgB,EAASvB,aAN7B,wBAAAoH,EAAAtF,SAAAqF,MAAP,gBAAAE,GAAA,OAAAH,EAAAlF,MAAAC,KAAAzE,YAAA,GSxHiB2H,CAAgBpG,EAAWC,KAExC6F,gBAAiB,SAACxJ,GT6FK,IAACqD,ES5FtB4C,GT4FsB5C,ES5FGrD,ET6F/B,eAAAiM,EAAAxJ,OAAAoD,EAAA,EAAApD,CAAAkJ,IAAA5F,KAAO,SAAAmG,EAAMjG,GAAN,OAAA0F,IAAAxF,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cACHL,EAAS3B,GAAa,IADnB6H,EAAA7F,KAAA,EAGkBlD,EAAgBC,GAHlC,OAIyB,IAJzB8I,EAAA5F,KAIUC,YACTP,EAzED,CACH1D,KAAM,eACNc,OAuEyBA,EAtEzBf,QAAQ,IAwER2D,EAAS3B,GAAa,IAPnB,wBAAA6H,EAAA1F,SAAAyF,MAAP,gBAAAE,GAAA,OAAAH,EAAAtF,MAAAC,KAAAzE,YAAA,MS3FIoH,kBAAmB,SAACvJ,GTsGK,IAACqD,ESrGxB4C,GTqGwB5C,ESrGGrD,ETsGjC,eAAAqM,EAAA5J,OAAAoD,EAAA,EAAApD,CAAAkJ,IAAA5F,KAAO,SAAAuG,EAAMrG,GAAN,OAAA0F,IAAAxF,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cACHL,EAAS3B,GAAa,IADnBiI,EAAAjG,KAAA,EAGkBlD,EAAkBC,GAHpC,OAIyB,IAJzBkJ,EAAAhG,KAIUC,YACTP,EA9ED,CACH1D,KAAM,eACNc,OA4E2BA,EA3E3Bf,QAAQ,IA6ER2D,EAAS3B,GAAa,IAPnB,wBAAAiI,EAAA9F,SAAA6F,MAAP,gBAAAE,GAAA,OAAAH,EAAA1F,MAAAC,KAAAzE,YAAA,SSjGWmJ,CAEb7B,qDC5BagD,GAxCE,SAACjE,GAAU,IAAAkE,EAOpBC,eAJAC,EAHoBF,EAGpBE,SACAC,EAJoBH,EAIpBG,aACAC,EALoBJ,EAKpBI,MALoBJ,EAMpBK,UAAaC,OAQjB,OACIpF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,KAAQ3H,SAAU4M,SAAUJ,EAPpC,SAACrJ,GACdgF,EAAM0E,QAAQ1J,EAAK2J,UACnBL,OAMQlF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQzH,aACpBqH,EAAAC,EAAAC,cAAA,WAAArF,OAAA8H,OAAA,CAAUxC,UAAWC,KAAQ1H,SACnB8M,YAAY,mBACRR,EAAS,WACT,CAAES,UAAU,EACRC,UAAW,EACXC,UAAW,SAKjC3F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQvH,WACpBmH,EAAAC,EAAAC,cAAA,UAAQvF,KAAM,SAAWwF,UAAWC,KAAQxH,QAA5C,gBCXLgN,GAFYjC,aAhBL,SAACrJ,GACnB,MAAO,IAKc,SAAC+D,GACtB,MAAO,CACHiH,QAAS,SAACrK,GACN,IAAIP,EZqCa,SAACO,GAC1B,MAAO,CACHN,KAAM,mBACNM,KAAMA,GYxCW4K,CAAc5K,GAC3BoD,EAAS3D,MAMMiJ,CAA4CkB,4CCTxDiB,GARF,SAAClF,GACV,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ1G,MACnBkH,EAAM3F,OCQJ8K,GAVD,SAACnF,GACX,IAAIoF,EAAcpF,EAAMmF,MAAMvI,IAAK,SAAA9D,GAAI,OAAIsG,EAAAC,EAAAC,cAAC+F,GAAD,CAAMjF,IAAKtH,EAAKQ,GAAIe,KAAMvB,EAAKuB,SAC1E,OACI+E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ1G,MAAxB,QAEKsM,ICWEE,GAFKvC,aAbE,SAACrJ,GACnB,MAAO,CACHyL,MAAO3C,GAAS9I,KAIC,SAAC+D,GACtB,MAAO,IAMSsF,CAA4CoC,YCyBjDI,GAzCO,SAACvF,GAAU,IAAAwF,EAECC,oBAAS,GAFVC,EAAAzL,OAAA0L,GAAA,EAAA1L,CAAAuL,EAAA,GAExBI,EAFwBF,EAAA,GAEdG,EAFcH,EAAA,GAAAI,EAGHL,mBAASzF,EAAMvE,QAHZsK,EAAA9L,OAAA0L,GAAA,EAAA1L,CAAA6L,EAAA,GAGxBrK,EAHwBsK,EAAA,GAGhBC,EAHgBD,EAAA,GAK9B3E,oBAAU,WACN4E,EAAUhG,EAAMvE,SAClB,CAACuE,EAAMvE,SAaR,OACI2D,EAAAC,EAAAC,cAAA,WACsB,OAAjBU,EAAMnF,OACA+K,EAKGxG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2G,WAAW,EAAMC,SAbrB,SAACC,GACpBH,EAAUG,EAAEC,cAAcC,QAYwCC,OAjB3C,WACvBT,GAAY,GACZ7F,EAAMgG,UAAUvK,IAgBO4K,MAAO5K,KANhB2D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACIiH,cAjBC,WACrBV,GAAY,KAgB0C7F,EAAMvE,OAASuE,EAAMvE,OAAS,cAM1E2D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YAAOU,EAAMvE,OAASuE,EAAMvE,OAAS,gBCV1C+K,GAjBC,SAACxG,GAAU,IAElBnF,EAAUsG,eAAVtG,OAEL,OACIuE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQnH,SACpB+G,EAAAC,EAAAC,cAAA,OAAKO,IAAoC,OAA/BG,EAAM3H,QAAQsI,OAAO8F,MAAiBC,KAAM1G,EAAM3H,QAAQsI,OAAO8F,MAAQ7G,IAAI,QACvFR,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQlH,MAAxB,MACO0H,EAAM3H,QAAQsO,OADrB,aACuC3G,EAAM3H,QAAQuO,UAErDxH,EAAAC,EAAAC,cAACuH,GAAD,CAAepL,OAAQuE,EAAMvE,OAAQuK,UAAWhG,EAAM8G,sBAAuBjM,OAAQA,IACrFuE,EAAAC,EAAAC,cAACyH,GAAD,MACY,OAAXlM,EAAkBuE,EAAAC,EAAAC,cAAC0H,GAAD,MAAuB,OCUvCC,GAxBI,SAACjH,GAAU,IAErBnF,EAAUsG,eAAVtG,OAaL,OAXAuG,oBAAU,WACQ,OAAXvG,GACCmF,EAAMkH,iBAAiBlH,EAAM1G,IAC7B0G,EAAMmH,sBAAsBnH,EAAM1G,MAGlC0G,EAAMkH,iBAAiBrM,GACvBmF,EAAMmH,sBAAsBtM,KAElC,CAACA,IAECmF,EAAM3H,SAGc,IAArB2H,EAAMpE,WACEwD,EAAAC,EAAAC,cAACmB,GAAD,MAEJrB,EAAAC,EAAAC,cAAC8H,GAAYpH,GALTZ,EAAAC,EAAAC,cAACmB,GAAD,OCjBX4G,GAAkB,SAAC3N,GACnB,MAAO,CACHsD,OAAQgF,GAAUtI,KAiBX4N,GAXQ,SAACC,GAQpB,OAD0BxE,aAAQsE,GAARtE,CANF,SAAC/C,GACjB,IAAIwH,EAAWC,eAEf,OADJC,QAAQC,IAAIH,GACJxH,EAAMhD,OACHoC,EAAAC,EAAAC,cAACiI,EAAcvH,GADGZ,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAU7B,GAAI,UAAYhG,MAAO,CAAEkO,KAAMJ,QCe/D1E,qBACXC,aA1BkB,SAACrJ,GACnB,MAAO,CACHrB,QAAS6J,GAAWxI,GACpBJ,GAAI6I,GAAUzI,GACdkC,WAAYwG,GAAc1I,GAC1BsD,OAAQgF,GAAUtI,GAClB+B,OAAQ4G,GAAU3I,KAID,SAAC+D,GACtB,MAAO,CACHyJ,iBAAkB,SAACrM,GACf4C,EpBuDoB,SAAC5C,GAC7B,sBAAAuC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAA4N,IAAAtK,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAmK,IAAAlK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHL,EAAS3B,GAAa,IADnB8B,EAAAE,KAAA,EAEkBzC,EAAuBR,GAFzC,OAEC6C,EAFDE,EAAAG,KAGHN,EAtBG,CACH1D,KAAM,sBACN1B,QAoBuBqF,IACvBD,EAAS3B,GAAa,IAJnB,wBAAA8B,EAAAK,SAAAT,MAAP,gBAAAU,GAAA,OAAAd,EAAAe,MAAAC,KAAAzE,YAAA,GoBxDiBuN,CAAiBrM,KAE9BsM,sBAAuB,SAACtM,GACpB4C,EpB6DyB,SAAC5C,GAClC,sBAAA4I,EAAAxJ,OAAAoD,EAAA,EAAApD,CAAA4N,IAAAtK,KAAO,SAAAmG,EAAOjG,GAAP,IAAAC,EAAA,OAAAmK,IAAAlK,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cACHL,EAAS3B,GAAa,IADnB6H,EAAA7F,KAAA,EAEkBzC,EAA4BR,GAF9C,OAEC6C,EAFDiG,EAAA5F,KAGHN,EAAS5B,EAAa6B,EAAS1C,OAC/ByC,EAAS3B,GAAa,IAJnB,wBAAA6H,EAAA1F,SAAAyF,MAAP,gBAAAE,GAAA,OAAAH,EAAAtF,MAAAC,KAAAzE,YAAA,GoB9DiBwN,CAAsBtM,KAEnCiM,sBAAuB,SAACrL,GACpBgC,EpBkEyB,SAAChC,GAClC,sBAAAoI,EAAA5J,OAAAoD,EAAA,EAAApD,CAAA4N,IAAAtK,KAAO,SAAAuG,EAAOrG,GAAP,OAAAoK,IAAAlK,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cACHL,EAAS3B,GAAa,IADnBiI,EAAAjG,KAAA,EAEkBzC,EAA4BI,GAF9C,OAG8B,IAH9BsI,EAAAhG,KAGU/C,KAAKgD,aACdP,EAAS5B,EAAaJ,IACtBgC,EAAS3B,GAAa,KALvB,wBAAAiI,EAAA9F,SAAA6F,MAAP,gBAAAE,GAAA,OAAAH,EAAA1F,MAAAC,KAAAzE,YAAA,GoBnEiBmN,CAAsBrL,QAQvC6L,GAFWxE,CAGbmE,gEC1Baa,GANC,SAAC9H,GACb,OAAOZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQvG,SAC1B+G,EAAM/G,UCeA8O,GAhBF,SAAC/H,GACV,IAAIgI,EAAkBhI,EAAMiI,iBAAiBrL,IAAI,SAAA3D,GACzC,GAAyB,IAArBA,EAAQO,SACT,OAAQ4F,EAAAC,EAAAC,cAAC4I,GAAD,CAAS9H,IAAKnH,EAAQK,GAAIL,QAASA,EAAQA,YAK9D,OACImG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQxG,MAAxB,OAEKgP,ICFEG,GAHKpF,aANE,SAACrJ,GACnB,MAAO,CACHuO,iBAAkB1F,GAAW7I,KAIO,KAAxBqJ,CAA8BgF,4CCAnCK,GANA,SAACpI,GACZ,OAAOZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQrG,QAC3BiG,EAAAC,EAAAC,cAACG,GAAA,EAAD,CAASC,GAAI,aAAeM,EAAM1G,IAAK0G,EAAMzG,QCStC8O,GAXC,SAACrI,GACb,IAAIsI,EAAkBtI,EAAMuI,gBAAgB3L,IAAI,SAAAzD,GAAM,OAAIiG,EAAAC,EAAAC,cAACkJ,GAAD,CAAQjP,KAAMJ,EAAOI,KAAMD,GAAIH,EAAOG,GAAI8G,IAAKjH,EAAOG,OAChH,OAEI8F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQtG,SAAxB,UAEKoP,ICEEG,GAFQ1F,aAND,SAACrJ,GACnB,MAAO,CACH6O,gBAAiBjG,GAAW5I,KAIW,KAAxBqJ,CAA8BsF,wBC4BtCK,GAlCK,SAAC1I,GAAU,IAAAkE,EAOvBC,eAJAC,EAHuBF,EAGvBE,SACAC,EAJuBH,EAIvBG,aACAC,EALuBJ,EAKvBI,MALuBJ,EAMvBK,UAAaC,OAQjB,OACIpF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQtH,cACpBkH,EAAAC,EAAAC,cAAA,QAAMmF,SAAUJ,EAPP,SAACrJ,GACdgF,EAAM2I,YAAY3N,EAAK/B,SACvBqL,OAMQlF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQzH,aACpBqH,EAAAC,EAAAC,cAAA,WAAArF,OAAA8H,OAAA,CAAUxC,UAAWC,KAAQ1H,SACnB8M,YAAY,sBACdR,EAAS,cAIrBhF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQvH,WACpBmH,EAAAC,EAAAC,cAAA,UAAQvF,KAAM,SAAUwF,UAAWC,KAAQxH,QAA3C,oBCbLgN,GAFYjC,aAAQ,KAVV,SAACtF,GACtB,MAAO,CACHkL,YAAa,SAACtO,GACV,IAAIP,E9B0BgB,SAACO,GAC7B,MAAO,CACHN,KAAM,uBACNM,KAAMA,G8B7BWuO,CAAiBvO,GAC9BoD,EAAS3D,MAMMiJ,CAAiC2F,ICE7CG,GAVE,WACb,OACIzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQzG,UACpBqG,EAAAC,EAAAC,cAACwJ,GAAD,MACA1J,EAAAC,EAAAC,cAACyJ,GAAD,MACA3J,EAAAC,EAAAC,cAAC0J,GAAD,QCCGlG,qBACXC,aAPkB,SAACrJ,GACnB,MAAO,CACHsD,OAAQgF,GAAUtI,KAKE,MACxB4N,GAFWxE,CAGb+F,IC2CaI,GAtDG,SAACjJ,GAEf,IAAIkJ,EAAWC,eAEXzP,EADW+N,eACM/N,MACjBkO,EAAOlO,EAAQA,EAAMkO,KAAKwB,SAAW,cAEzChI,oBAAU,WACN,IAAoB,IAAjBpB,EAAMhD,OAAiB,OAAOkM,EAAStB,EAAM,CAAEyB,SAAS,KAC7D,CAACrJ,EAAMhD,SATgB,IAAAkH,EAiBrBC,eAJAC,EAbqBF,EAarBE,SACAC,EAdqBH,EAcrBG,aACAC,EAfqBJ,EAerBI,MACaE,EAhBQN,EAgBrBK,UAAaC,OAMjB,OACIpF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,QAAMmF,SAAUJ,EANP,SAACrJ,GACdsJ,OAMQlF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAArF,OAAA8H,OAAA,CAAO6C,YAAY,SAAYR,EAAS,QAChC,CAAES,UAAU,EACRC,UAAW,EACXC,UAAW,OAItBP,EAAOlJ,OAA8B,aAArBkJ,EAAOlJ,MAAMvB,MAAsBqF,EAAAC,EAAAC,cAAA,mCACnDkF,EAAOlJ,OAA8B,cAArBkJ,EAAOlJ,MAAMvB,MAAuBqF,EAAAC,EAAAC,cAAA,yBACpDkF,EAAOlJ,OAA8B,cAArBkJ,EAAOlJ,MAAMvB,MAAuBqF,EAAAC,EAAAC,cAAA,2BAEzDF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAArF,OAAA8H,OAAA,CAAO6C,YAAY,WAAW7K,KAAM,YAAgBqK,EAAS,WAAY,CAAES,UAAU,MACpFL,EAAOjJ,UAAoC,aAAxBiJ,EAAOjJ,SAASxB,MAAsBqF,EAAAC,EAAAC,cAAA,oCAE9DF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAArF,OAAA8H,OAAA,CAAOhI,KAAM,YAAgBqK,EAAS,gBAD1C,eAGAhF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQvF,KAAM,UAAd,UACiB,OAAhBiG,EAAMsJ,MAAiB,KAAOlK,EAAAC,EAAAC,cAAA,WAAMU,EAAMsJ,WC9BhDxG,qBACXC,aAfkB,SAACrJ,GACnB,MAAO,CACH4P,MAAOrH,GAASvI,GAChBsD,OAAQgF,GAAUtI,KAGD,SAAC+D,GACtB,MAAO,CACHjF,MAAM,SAAC8C,EAAOC,EAAUC,GACpBiC,E9BwCc,SAACnC,EAAOC,EAAUC,GACxC,sBAAAiI,EAAAxJ,OAAAoD,EAAA,EAAApD,CAAAqD,IAAAC,KAAO,SAAAmG,EAAMjG,GAAN,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cAAA6F,EAAA7F,KAAA,EACkBzC,EAAiBC,EAAOC,EAAUC,GADpD,OAEyB,KADxBkC,EADDiG,EAAA5F,MAEUC,WACTP,EAASP,EAAcQ,EAAS1C,KAAK1B,GAAIoE,EAAS1C,KAAKxC,MAAOkF,EAAS1C,KAAKM,OAAO,IAEnFmC,EApBD,CACH1D,KAAM,iBACNd,QAkBqByE,EAAS3E,WAL3B,wBAAA4K,EAAA1F,SAAAyF,MAAP,gBAAAE,GAAA,OAAAH,EAAAtF,MAAAC,KAAAzE,YAAA,G8BzCiB4P,CAAWjO,EAAOC,EAAUC,QAKlCsH,CAEbmG,ICQaO,GAtBE,WAEb,OACIpK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ3G,kBACpBuG,EAAAC,EAAAC,cAACiC,GAAA,EAAD,KACInC,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,GAAGC,QAAStK,EAAAC,EAAAC,cAACqK,GAAD,QACxBvK,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,WAAWC,QAAStK,EAAAC,EAAAC,cAACqK,GAAD,OAC5BvK,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,UAAUC,QAAStK,EAAAC,EAAAC,cAACqK,GAAD,SAEnCvK,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,aAAaC,QAAStK,EAAAC,EAAAC,cAACsK,GAAD,OAC9BxK,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,YAAYC,QAAStK,EAAAC,EAAAC,cAACsK,GAAD,SAErCxK,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,SAASC,QAAStK,EAAAC,EAAAC,cAACuK,GAAD,OAC1BzK,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,aAAaC,QAAStK,EAAAC,EAAAC,cAACuK,GAAD,SAEtCzK,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,QAAQC,QAAStK,EAAAC,EAAAC,cAACwK,GAAD,QAC7B1K,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAOkI,KAAK,IAAIC,QAAStK,EAAAC,EAAAC,cAAA,sBCX1ByK,GATF,WACT,OACI3K,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ9G,cAChB0G,EAAAC,EAAAC,cAAC0K,GAAD,MACA5K,EAAAC,EAAAC,cAAC2K,GAAD,4BCEDC,GARA,WACX,OACI9K,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQpG,gBAAxB,+BCOO+Q,GATA,SAACnK,GAEZ,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQjH,iBACF,IAAjByH,EAAMhD,OAAmBoC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQhH,OAAxB,IAAiCwH,EAAMxH,MAAvC,MAAgD4G,EAAAC,EAAAC,cAAA,UAAQY,QAASF,EAAMoK,QAAvB,UAAhD,KAAwG,kBC8B/HrH,gBApBO,SAACrJ,GACnB,MAAO,CACHlB,MAAOkB,EAAMiF,KAAKnG,MAClBqC,OAAQnB,EAAMiF,KAAK9D,OACnBS,MAAO5B,EAAMiF,KAAKrD,MAClB0B,OAAQtD,EAAMiF,KAAK3B,SAGF,SAACS,GACtB,MAAO,CACHN,YAAa,WACTM,EAASN,MAEbiN,OAAO,WACH3M,EnCoCR,eAAAoG,EAAA5J,OAAAoD,EAAA,EAAApD,CAAAqD,IAAAC,KAAO,SAAAuG,EAAMrG,GAAN,OAAAH,IAAAK,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAAjG,KAAA,EACkBzC,IADlB,OAEyB,IAFzB0I,EAAAhG,KAEUC,YACTP,EAASP,EAAc,KAAM,KAAM,MAAM,IAH1C,wBAAA6G,EAAA9F,SAAA6F,MAAP,gBAAAE,GAAA,OAAAH,EAAA1F,MAAAC,KAAAzE,YAAA,OmC9BWoJ,CA9BS,SAAC/C,GAAS,IAEzBnF,EAAUsG,eAAVtG,OAML,OAJAuG,oBAAU,WACNpB,EAAM7C,eACRtC,GAEMuE,EAAAC,EAAAC,cAAC+K,GAAWrK,+cCLlBsK,iKAEF,WACIlM,KAAK4B,MAAM7C,oCAGf,WACI,OACIiC,EAAAC,EAAAC,cAACG,GAAA,EAAD,KACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ/G,aACpB2G,EAAAC,EAAAC,cAACiL,GAAD,MACAnL,EAAAC,EAAAC,cAACkL,GAAD,MACApL,EAAAC,EAAAC,cAACmL,GAAD,eAZFC,IAAMnD,WA2BTzE,qBACXC,aAAQ,KATa,SAACtF,GACtB,MAAO,CACHN,YAAa,WACTM,EAASN,SAKN2F,CAEbwH,IC/BeK,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACD3L,EAAAC,EAAAC,cAACF,EAAAC,EAAM2L,WAAP,KACI5L,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,CAAUpM,MAAOA,GACbO,EAAAC,EAAAC,cAAC4L,GAAD","file":"static/js/main.f556f972.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__2AAEp\",\"user\":\"Users_user__2kKTb\",\"active\":\"Users_active__2NRus\",\"pagination\":\"Users_pagination__3RfUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftbar_wrapper\":\"LeftBar_leftbar_wrapper__1TQ3P\",\"item\":\"LeftBar_item__1t4Tz\",\"active\":\"LeftBar_active__3sYWq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"areapost\":\"AreaPost_areapost__zANPL\",\"textarea\":\"AreaPost_textarea__ZgMhn\",\"textareaDiv\":\"AreaPost_textareaDiv__kaCbn\",\"button\":\"AreaPost_button__2Jk_Y\",\"buttonDiv\":\"AreaPost_buttonDiv__srAqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area_message\":\"AreaMessage_area_message__1DUo5\",\"textarea\":\"AreaMessage_textarea__1afcU\",\"button\":\"AreaMessage_button__1NRH6\"};","module.exports = __webpack_public_path__ + \"static/media/1_1WCjO1iYMo7J7Upp8KMfLA@2x.00584ff8.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__zjwgi\",\"info\":\"Profile_info__vdNSj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrapper\":\"Header_header_wrapper__3m4FB\",\"login\":\"Header_login__2hG6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"App_app_wrapper__2-I_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_wrapper\":\"Body_body_wrapper__1eulG\",\"rightbar\":\"Body_rightbar__2qT5h\",\"leftbar\":\"Body_leftbar__dO_H0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightbar_wrapper\":\"RightBar_rightbar_wrapper__1ysFV\"};","module.exports = __webpack_public_path__ + \"static/media/XOsX.57615b8c.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Posts_post__2yBbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2OY2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2uTUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__3twB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TcJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1y73s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1rmOC\",\"active\":\"Dialog_active__DyWou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_wrapper\":\"Footer_footer_wrapper__1-9HE\"};","let SEND_MESSAGE = \"message/SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n        dialogs: [\r\n            {id: 0, name: \"Dima\"},\r\n            {id: 1, name: \"Sveta\"},\r\n            {id: 2, name: \"Andrey\"}\r\n        ],\r\n        messages: [\r\n            {id: 0, message: 'Hi', idDialog: 2},\r\n            {id: 1, message: 'Yo', idDialog: 2},\r\n            {id: 2, message: 'Normal', idDialog: 1},\r\n            {id: 3, message: 'Ok', idDialog: 1},\r\n            {id: 4, message: 'Yes, i to', idDialog: 0},\r\n            {id: 5, message: 'I am OK', idDialog: 0}\r\n        ],\r\n}\r\n\r\nlet MessageReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SEND_MESSAGE: {\r\n            let size = state.messages.length;\r\n            return {\r\n                ...state,\r\n                ...state.messages,\r\n                messages: [...state.messages, {id: size, message: action.text, idDialog: 2}],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const AddMessageAction = (text) =>{\r\n    return {\r\n        type: \"message/SEND_MESSAGE\",\r\n        text: text\r\n    }\r\n}\r\n\r\nexport default MessageReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\" : '1c8106d7-cbc3-4c83-aa0f-b1611d31e00c'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    Follow (userID) {\r\n        return instance.post('follow/' + userID).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n    UnFollow (userID) {\r\n        return instance.delete('follow/' + userID).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n    GetFollow (userID) {\r\n        return instance.get('follow/' + userID).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n    GetUsers (pageCount, sizePage) {\r\n        return instance.get(`users?page=${pageCount}&count=${sizePage}`).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n    GetFriends (pageCount, sizePage) {\r\n        return instance.get(`users?page=${pageCount}&count=${sizePage}&friend=true`).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    AuthMe () {\r\n        return instance.get(`auth/me`).then(\r\n            resronse => resronse.data\r\n        )\r\n\r\n    },\r\n    Login (email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n    Logout () {\r\n        return instance.delete(`auth/login`).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n    InfoProfile(userID){\r\n        return instance.get(`profile/${userID}`).then(\r\n            resronse => resronse.data\r\n        )\r\n    },\r\n    getStatusProfile(userID){\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n    setStatusProfile(status){\r\n        return instance.put(`profile/status`,{\r\n            status: status\r\n        })\r\n    }\r\n}","import {profileAPI} from \"../DAL/API\";\r\n\r\nconst ADD_POST = \"profile/ADD_POST\";\r\nconst SET_PROFILE = \"profile/SET_PROFILE\";\r\nconst SET_STATUS = \"profile/SET_STATUS\";\r\nconst IS_FEATCHING_PROFILE = \"profile/IS_FEATCHING_PROFILE\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 0, text: 'Hello world!'},\r\n        {id: 1, text: 'Hello milk'},\r\n        {id: 2, text: 'Hello friends'}\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n    isFetching: false,\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let sizePosts = state.posts.length;\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: sizePosts, text: action.text}],\r\n            }\r\n        }\r\n        case SET_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case IS_FEATCHING_PROFILE: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const AddPostAction = (text) => {\r\n    return {\r\n        type: \"profile/ADD_POST\",\r\n        text: text\r\n    }\r\n}\r\nexport const ProfileAction = (profile) => {\r\n    return {\r\n        type: \"profile/SET_PROFILE\",\r\n        profile\r\n    }\r\n}\r\nexport const StatusAction = (status) => {\r\n    return {\r\n        type: \"profile/SET_STATUS\",\r\n        status: status\r\n    }\r\n}\r\nexport const IsFeatchingF = (bool) => {\r\n    return {\r\n        type: \"profile/IS_FEATCHING_PROFILE\",\r\n        isFetching: bool\r\n    }\r\n}\r\n\r\nexport const InfoProfileThunk = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(IsFeatchingF(true));\r\n        let response = await profileAPI.InfoProfile(userID)\r\n        dispatch(ProfileAction(response));\r\n        dispatch(IsFeatchingF(false));\r\n\r\n    }\r\n}\r\nexport const getStatusProfileThunk = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(IsFeatchingF(true));\r\n        let response = await profileAPI.getStatusProfile(userID)\r\n        dispatch(StatusAction(response.data));\r\n        dispatch(IsFeatchingF(false));\r\n    }\r\n}\r\nexport const setStatusProfileThunk = (status) => {\r\n    return async (dispatch) => {\r\n        dispatch(IsFeatchingF(true));\r\n        let response = await profileAPI.setStatusProfile(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(StatusAction(status));\r\n            dispatch(IsFeatchingF(false));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileReducer;","import {usersAPI} from \"../DAL/API\";\r\n\r\nlet FOLLOW = \"users/FOLLOW\";\r\nlet SET_USERS = \"users/SET_USERS\";\r\nlet SET_PAGE_COUNT = \"users/SET_PAGE_COUNT\";\r\nlet SET_TOTAL_COUNT = \"users/SET_TOTAL_COUNT\";\r\nlet IS_FEATCHING = \"users/IS_FEATCHING\";\r\nlet TOTAL_PAGES = \"users/TOTAL_PAGES\";\r\nlet COUNT_DOTE_START = \"users/COUNT_DOTE_START\";\r\nlet COUNT_DOTE_END = \"users/COUNT_DOTE_END\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCount: 0,\r\n    pageCount: 1,\r\n    sizePage: 10,\r\n    isFetching: false,\r\n    totalPages: 0,\r\n    countDoteStart: false,\r\n    countDoteEnd: false\r\n}\r\n\r\nlet UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                ...state.users,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, follow: action.action};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                ...state.users,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_PAGE_COUNT: {\r\n            return {\r\n                ...state,\r\n                pageCount: action.pageCount\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case IS_FEATCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOTAL_PAGES: {\r\n            return {\r\n                ...state,\r\n                totalPages: action.totalPages\r\n            }\r\n        }\r\n        case COUNT_DOTE_START: {\r\n            return {\r\n                ...state,\r\n                countDoteStart: action.dote\r\n\r\n            }\r\n        }\r\n        case COUNT_DOTE_END: {\r\n            return {\r\n                ...state,\r\n                countDoteEnd: action.dote\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const FollowUsers = (id) => {\r\n    return {\r\n        type: \"users/FOLLOW\",\r\n        userID: id,\r\n        action: true\r\n    }\r\n}\r\nexport const UnFollowUsers = (id) => {\r\n    return {\r\n        type: \"users/FOLLOW\",\r\n        userID: id,\r\n        action: false\r\n    }\r\n}\r\nexport const setPageCount = (count) => {\r\n    return {\r\n        type: \"users/SET_PAGE_COUNT\",\r\n        pageCount: count\r\n    }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: \"users/SET_USERS\",\r\n        users: users\r\n    }\r\n}\r\nexport const setTotalCount = (count) => {\r\n    return {\r\n        type: \"users/SET_TOTAL_COUNT\",\r\n        totalCount: count\r\n    }\r\n}\r\nexport const IsFeatchingF = (bool) => {\r\n    return {\r\n        type: \"users/IS_FEATCHING\",\r\n        isFetching: bool\r\n    }\r\n}\r\nexport const setTotalPages = (count) => {\r\n    return {\r\n        type: \"users/TOTAL_PAGES\",\r\n        totalPages: count\r\n    }\r\n}\r\nexport const setCountDoteStart = (dote) => {\r\n    return {\r\n        type: \"users/COUNT_DOTE_START\",\r\n        dote: dote\r\n    }\r\n}\r\nexport const setCountDoteEnd = (dote) => {\r\n    return {\r\n        type: \"users/COUNT_DOTE_END\",\r\n        dote: dote\r\n    }\r\n}\r\n\r\nexport const setUsersThunk = (pageCount, sizePage) => {\r\n    return async dispatch => {\r\n        dispatch(IsFeatchingF(true));\r\n        let response = await usersAPI.GetUsers(pageCount, sizePage)\r\n        dispatch(IsFeatchingF(false));\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setPageCount(pageCount));\r\n        dispatch(setTotalCount(response.totalCount));\r\n    }\r\n}\r\n\r\nexport const FollowUserThunk = (userID) => {\r\n    return async dispatch => {\r\n        dispatch(IsFeatchingF(true));\r\n\r\n        let response = await usersAPI.Follow(userID)\r\n        if (response.resultCode === 0) {\r\n            dispatch(FollowUsers(userID));\r\n        }\r\n        dispatch(IsFeatchingF(false));\r\n    }\r\n}\r\n\r\nexport const unFollowUserThunk = (userID) => {\r\n    return async dispatch => {\r\n        dispatch(IsFeatchingF(true));\r\n\r\n        let response = await usersAPI.UnFollow(userID)\r\n        if (response.resultCode === 0) {\r\n            dispatch(UnFollowUsers(userID));\r\n        }\r\n        dispatch(IsFeatchingF(false));\r\n    }\r\n}\r\n\r\nexport const setFriendsThunk = (pageCount, sizePage) => {\r\n    return async dispatch => {\r\n        dispatch(IsFeatchingF(true));\r\n        let response = await usersAPI.GetFriends(pageCount, sizePage)\r\n        dispatch(IsFeatchingF(false));\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setPageCount(pageCount));\r\n        dispatch(setTotalCount(response.totalCount));\r\n\r\n    }\r\n}\r\n\r\nexport default UsersReducer;","import {profileAPI} from \"../DAL/API\";\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\r\nconst SET_ERROR = \"auth/SET_ERROR\";\r\n\r\nlet initialState = {\r\n    login: null,\r\n    userID: null,\r\n    email: null,\r\n    isAuth: false,\r\n    Error: null\r\n}\r\n\r\nlet AutchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                login: action.action.login,\r\n                userID: action.action.userID,\r\n                email: action.action.email,\r\n                isAuth: action.action.isAuth\r\n            }\r\n        }\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                Error: action.message,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const SetUserDataAC = (userID, login, email, isAuth) => {\r\n    return {\r\n        type: \"auth/SET_USER_DATA\",\r\n        action: {userID, login, email, isAuth}\r\n    }\r\n}\r\nexport const ErrorAC = (message) => {\r\n    return {\r\n        type: \"auth/SET_ERROR\",\r\n        message: message\r\n    }\r\n}\r\n\r\nexport const AuthMeThunk = () => {\r\n    return async dispatch => {\r\n        let response = await profileAPI.AuthMe()\r\n        if (response.resultCode === 0) {\r\n            dispatch(SetUserDataAC(response.data.id, response.data.login, response.data.email, true));\r\n        }\r\n    }\r\n}\r\nexport const LoginThunk = (email, password, rememberMe) => {\r\n    return async dispatch => {\r\n        let response = await profileAPI.Login(email, password, rememberMe)\r\n        if (response.resultCode === 0) {\r\n            dispatch(SetUserDataAC(response.data.id, response.data.login, response.data.email, true));\r\n        } else {\r\n            dispatch(ErrorAC(response.messages))\r\n        }\r\n    }\r\n}\r\nexport const LogoutThunk = () => {\r\n    return async dispatch => {\r\n        let response = await profileAPI.Logout()\r\n        if (response.resultCode === 0) {\r\n            dispatch(SetUserDataAC(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default AutchReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport MessageReducer from \"./MessageReducer\";\r\nimport ProfileReducer from \"./ProfileReducer\";\r\nimport UsersReducer from \"./UsersReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet reducers = combineReducers({\r\n    MessagePage: MessageReducer,\r\n    ProfilePage: ProfileReducer,\r\n    UsersPage: UsersReducer,\r\n    Auth: AuthReducer,\r\n})\r\n\r\nconst store = createStore(reducers,composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import classes from './LeftBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React  from 'react';\r\n\r\nconst LeftBar = () => {\r\n    return (\r\n            <div className={classes.leftbar_wrapper}>\r\n                <div  className={`${classes.item}  ${classes.active}`}>\r\n                    <NavLink  to=\"/profile/my\">Profile</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/messages\">Messages</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/users/all\">Users</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/users/friends\">Friends</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default LeftBar;","import React from \"react\";\r\nimport preloader from \"../../IMG/XOsX.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img alt=\"aaa\" src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import classes from \"./Users/Users.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n    return (\r\n    <div>\r\n        {\r\n            props.pages.map(p => {\r\n                if (p === 1) {\r\n                    return <span onClick={() => {\r\n                        props.onPageChange(p)\r\n                    }} key={p}\r\n                                 className={props.pageCount === p ? classes.active : classes.pagination}>{p}</span>\r\n                }\r\n\r\n                if ((1 < p) && (p <= props.pageCount - 3)) {\r\n                    props.setcountDoteStart(true);\r\n                }\r\n                if ((props.countDoteStart === true) && (props.pageCount - 3 === p)) {\r\n                    return <span key={p}>...</span>\r\n                }\r\n\r\n                if ((props.totalPages > p) && (p >= props.pageCount + 3)) {\r\n                    props.setcountDoteEnd(true);\r\n                }\r\n                if ((props.countDoteEnd === true) && (props.pageCount + 3 === p) && (props.pageCount + 3 !== props.totalPages)) {\r\n                    return <span key={p}>...</span>\r\n                }\r\n\r\n                if (props.pageCount - 2 === p || props.pageCount - 1 === p || props.pageCount === p || props.pageCount + 2 === p || props.pageCount + 1 === p) {\r\n                    return <span onClick={() => {\r\n                        props.onPageChange(p)\r\n                    }} key={p}\r\n                                 className={props.pageCount === p ? classes.active : classes.pagination}>{p}</span>\r\n                }\r\n\r\n                if (props.totalPages === p) {\r\n                    return <span onClick={() => {\r\n                        props.onPageChange(p)\r\n                    }} key={p}\r\n                                 className={props.pageCount === p ? classes.active : classes.pagination}>{p}</span>\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport userPhoto from \"../../../../IMG/1_1WCjO1iYMo7J7Upp8KMfLA@2x.jpeg\";\r\nimport classes from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../../Preloader\";\r\nimport Pagination from \"../Pagination\";\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <>\r\n            {props.isFetching ? <Preloader/> : null}\r\n            <Pagination {...props}/> {/* TODO add user.js*/}\r\n            {\r\n                props.users.map(user => props.isFetching ? null : <div className={classes.user} key={user.id}>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img alt=\"AVA\" src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                 className={classes.img}/>\r\n                        </NavLink>\r\n                        <div>\r\n                            {user.name}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button onClick={() => {\r\n                                    props.unFollowUserThunk(user.id);\r\n                                    if(props.isFetching ? null : props.onPageChange(props.pageCount));\r\n                                }}>Unfollow</button>\r\n                                : <button onClick={() => {\r\n                                    props.FollowUserThunk(user.id);\r\n                                    if(props.isFetching ? null : props.onPageChange(props.pageCount));\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Users;","import React, {useEffect} from \"react\";\r\nimport Users from \"./Users\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\n\r\nconst UsersAPI = (props) =>{\r\n    let {UsersType} = useParams();\r\n\r\n    let Nav = () =>{\r\n        return <Navigate to=\"*\" />\r\n    }\r\n\r\n    useEffect (() => {\r\n        if(UsersType === \"all\"){\r\n\r\n            props.setUsersThunk(1, props.sizePage);\r\n        }\r\n        else if(UsersType === \"friends\"){\r\n            props.setFriendsThunk(1, props.sizePage)\r\n        }\r\n        else Nav()\r\n    },[UsersType])\r\n\r\n    let onPageChange = (count) => {\r\n        if(UsersType === \"all\"){\r\n            props.setUsersThunk(count, props.sizePage);\r\n        }\r\n        if(UsersType === \"friends\"){\r\n            props.setFriendsThunk(count, props.sizePage)\r\n        }\r\n    }\r\n\r\n    let AllpageCount = Math.ceil(props.totalCount / props.sizePage);\r\n    props.settotalPages(AllpageCount);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= AllpageCount; i++){\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <Users\r\n            pages={pages}\r\n            onPageChange={onPageChange}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UsersAPI;","export const getIsAuth = (state) => {\r\n    return state.Auth.isAuth\r\n}\r\nexport const getError = (state) => {\r\n    return state.Auth.Error\r\n}\r\nexport const getProfile = (state) => {\r\n    return state.ProfilePage.profile\r\n}\r\nexport const getUserId = (state) => {\r\n    return state.Auth.userID\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching\r\n}\r\nexport const getStatus = (state) => {\r\n    return state.ProfilePage.status\r\n}\r\nexport const getDialogs = (state) => {\r\n    return state.MessagePage.dialogs\r\n}\r\nexport const getMessage = (state) => {\r\n    return state.MessagePage.messages\r\n}\r\nexport const getPosts = (state) => {\r\n    return state.ProfilePage.posts\r\n}\r\nexport const getUsers = (state) => {\r\n    return state.UsersPage.users\r\n}\r\nexport const getTotalCountUsers = (state) => {\r\n    return state.UsersPage.totalCount\r\n}\r\nexport const getPageCountUsers = (state) => {\r\n    return state.UsersPage.pageCount\r\n}\r\nexport const getSizePageUsers = (state) => {\r\n    return state.UsersPage.sizePage\r\n}\r\nexport const getTotalPages = (state) => {\r\n    return state.UsersPage.totalPages\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    setCountDoteEnd,\r\n    setCountDoteStart,\r\n    setPageCount,\r\n    setTotalPages,\r\n    setUsersThunk,\r\n    unFollowUserThunk,\r\n    FollowUserThunk,\r\n    setFriendsThunk\r\n} from \"../../../../Redux/UsersReducer\";\r\nimport UsersAPI from \"./UsersAPI\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getIsAuth, getIsFetching,\r\n    getPageCountUsers,\r\n    getSizePageUsers,\r\n    getTotalCountUsers, getTotalPages,\r\n    getUsers\r\n} from \"../../../../Redux/Selectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n\r\n   return {\r\n       users: getUsers(state),\r\n       totalCount: getTotalCountUsers(state),\r\n       pageCount: getPageCountUsers(state),\r\n       sizePage: getSizePageUsers(state),\r\n       isFetching: getIsFetching(state),\r\n       totalPages: getTotalPages(state),\r\n       countDoteStart: state.UsersPage.countDoteStart, //TODO local state\r\n       countDoteEnd: state.UsersPage.countDoteEnd, // and this\r\n       isAuth: getIsAuth(state),\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPageCount: (count) => {\r\n            let action = setPageCount(count);\r\n            dispatch(action);\r\n        },\r\n        settotalPages: (count) =>{\r\n            let action = setTotalPages(count);\r\n            dispatch(action);\r\n        },\r\n        setcountDoteStart: (dote) => {\r\n            let action = setCountDoteStart(dote);\r\n            dispatch(action);\r\n        },\r\n        setcountDoteEnd: (dote) => {\r\n            let action = setCountDoteEnd(dote);\r\n            dispatch(action);\r\n        },\r\n        setUsersThunk: (pageCount, sizePage) => {\r\n            dispatch(setUsersThunk(pageCount, sizePage))\r\n        },\r\n        setFriendsThunk: (pageCount, sizePage) => {\r\n            dispatch(setFriendsThunk(pageCount, sizePage))\r\n        },\r\n        FollowUserThunk: (user) => {\r\n          dispatch(FollowUserThunk(user));\r\n        },\r\n        unFollowUserThunk: (user) => {\r\n          dispatch(unFollowUserThunk(user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n)(UsersAPI)\r\n\r\n","import classes from './AreaPost.module.css';\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AreaPost = (props) => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        props.AddPost(data.TextPost)\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <form className={classes.areapost} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={classes.textareaDiv}>\r\n                    <textarea className={classes.textarea}\r\n                              placeholder=\"Text a new Post\"\r\n                              {...register(\"TextPost\",\r\n                                  { required: true ,\r\n                                      minLength: 1,\r\n                                      maxLength: 200\r\n                                  }\r\n                              )}\r\n                    />\r\n                </div>\r\n                <div className={classes.buttonDiv}>\r\n                    <button type={\"submit\"}  className={classes.button}>\r\n                        Add post\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AreaPost;","import {AddPostAction} from \"../../../../../../Redux/ProfileReducer\";\r\nimport AreaPost from \"./AreaPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        AddPost: (text) => {\r\n            let action = AddPostAction(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet AreaMessageContainer = connect(mapStateToProps,mapDispatchToProps)(AreaPost);\r\n\r\nexport default AreaMessageContainer;\r\n","import classes from './Post.module.css';\r\nimport React  from 'react';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            {props.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import classes from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React  from 'react';\r\n\r\nconst Posts = (props) => {\r\n    let ElementPost = props.Posts.map( post => <Post key={post.id} text={post.text}/>)\r\n    return (\r\n        <div className={classes.post}>\r\n            Posts\r\n            {ElementPost}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\nimport {getPosts} from \"../../../../../Redux/Selectors\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        Posts: getPosts(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nlet PostContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\r\n\r\nexport default PostContainer;","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n   useEffect(() => {\r\n       setStatus(props.status)\r\n   },[props.status])\r\n\r\n    const ActivateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const DeactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.setStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.userID === \"my\"\r\n                ? !editMode\r\n                    ? <div>\r\n                        <span\r\n                            onDoubleClick={ActivateEditMode}>{props.status ? props.status : \"No status\"}</span>\r\n                    </div>\r\n                    : <div>\r\n                        <input autoFocus={true} onChange={onStatusChange} onBlur={DeactivateEditMode}\r\n                               value={status}/>\r\n                    </div>\r\n                : <div>\r\n                    <span>{props.status ? props.status : \"No status\"}</span>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import classes from './Profile.module.css';\r\nimport React  from 'react';\r\nimport AreaPostContainer from \"./Posts/AreaPost/AreaPostContainer\";\r\nimport PostContainer from \"./Posts/PostContainer\";\r\nimport ava from \"../../../../IMG/1_1WCjO1iYMo7J7Upp8KMfLA@2x.jpeg\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    let {userID} = useParams();\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            <img src={props.profile.photos.large === null ? ava : props.profile.photos.large } alt=\"ava\"/>\r\n            <div className={classes.info}>\r\n               ID={props.profile.userId} FullName={props.profile.fullName}\r\n            </div>\r\n            <ProfileStatus status={props.status} setStatus={props.setStatusProfileThunk} userID={userID}/>\r\n            <PostContainer />\r\n            {userID === \"my\" ? <AreaPostContainer/> : null} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React  from 'react';\r\nimport Preloader from \"../../Preloader\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst ProfileAPI = (props) => {\r\n\r\n    let {userID} = useParams();\r\n\r\n    useEffect(() => {\r\n        if(userID === \"my\"){\r\n            props.InfoProfileThunk(props.id);\r\n            props.getStatusProfileThunk(props.id);\r\n        }\r\n        else {\r\n            props.InfoProfileThunk(userID);\r\n            props.getStatusProfileThunk(userID);\r\n        }\r\n    },[userID]);\r\n\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    if(props.isFetching === true){\r\n        return <Preloader />\r\n    }\r\n    return <Profile {...props}/>;\r\n}\r\n\r\nexport default ProfileAPI;","import React from \"react\";\r\nimport {Navigate, useLocation} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../Redux/Selectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nlet withAuthRedirect = (Component) =>{\r\n    let RedirectComponent = (props) =>{\r\n            let location = useLocation();\r\n        console.log(location)\r\n            if(!props.isAuth) return <Navigate to={'/login/'}  state={{ from: location }} />\r\n            return <Component {...props}/>\r\n    }\r\n    let ConnectAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectAuthRedirect;\r\n}\r\n\r\nexport default withAuthRedirect;","import {connect} from \"react-redux\";\r\nimport {getStatusProfileThunk, InfoProfileThunk, setStatusProfileThunk} from \"../../../../Redux/ProfileReducer\";\r\nimport ProfileAPI from \"./ProfileAPI\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../../../HOC/withAuthRedirect\";\r\nimport {getIsAuth, getIsFetching, getProfile, getStatus, getUserId} from \"../../../../Redux/Selectors\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        profile: getProfile(state),\r\n        id: getUserId(state),\r\n        isFetching: getIsFetching(state),\r\n        isAuth: getIsAuth(state),\r\n        status: getStatus(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        InfoProfileThunk: (userID) => {\r\n            dispatch(InfoProfileThunk(userID));\r\n        },\r\n        getStatusProfileThunk: (userID) => {\r\n            dispatch(getStatusProfileThunk(userID))\r\n        },\r\n        setStatusProfileThunk: (status) => {\r\n            dispatch(setStatusProfileThunk(status))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(ProfileAPI)\r\n","import classes from \"./Message.module.css\";\r\nimport React  from 'react';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>\r\n        {props.message}\r\n    </div>\r\n}\r\n\r\nexport default Message;","import classes from \"./Chat.module.css\";\r\nimport React  from 'react';\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Chat = (props) => {\r\n    let MessagesElement = props.Message_elements.map(message => {\r\n            if (message.idDialog === 2) {\r\n               return (<Message key={message.id} message={message.message}/>)\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className={classes.chat}>\r\n            Chat\r\n            {MessagesElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import {connect} from \"react-redux\";\r\nimport Chat from \"./Chat\";\r\nimport {getMessage} from \"../../../../../Redux/Selectors\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        Message_elements: getMessage(state)\r\n    }\r\n}\r\n\r\nlet ChatContainer = connect(mapStateToProps,null)(Chat);\r\n\r\n\r\nexport default ChatContainer;","import classes from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React  from 'react';\r\n\r\nconst Dialog = (props) => {\r\n    return <div className={classes.dialog}>\r\n        <NavLink to={\"/messages/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default Dialog;","import classes from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport React  from 'react';\r\n\r\nconst Dialogs = (props) => {\r\n    let DialogsElements = props.Dialog_elements.map(dialog => <Dialog name={dialog.name} id={dialog.id} key={dialog.id}/>)\r\n    return (\r\n\r\n        <div className={classes.dialogs}>\r\n            Dialogs\r\n            {DialogsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {getDialogs} from \"../../../../../Redux/Selectors\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        Dialog_elements: getDialogs(state)\r\n    }\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps,null)(Dialogs);\r\n\r\nexport default DialogsContainer;","import classes from './AreaMessage.module.css';\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AreaMessage = (props) => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        props.MessageText(data.message);\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.area_message}>\r\n            <form onSubmit={handleSubmit(onSubmit)} >\r\n                <div className={classes.textareaDiv}>\r\n                    <textarea className={classes.textarea}\r\n                              placeholder=\"Text a new message\"\r\n                        {...register(\"message\")}\r\n\r\n                    />\r\n                </div>\r\n                <div className={classes.buttonDiv}>\r\n                    <button type={\"submit\"} className={classes.button}>\r\n                        Send message\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AreaMessage;","import {connect} from \"react-redux\";\r\nimport AreaMessage from \"./AreaMessage\";\r\nimport {AddMessageAction} from \"../../../../../../Redux/MessageReducer\";\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        MessageText: (text) => {\r\n            let action = AddMessageAction(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet AreaMessageContainer = connect(null,mapDispatchToProps)(AreaMessage);\r\n\r\nexport default AreaMessageContainer;","import classes from \"./Messages.module.css\";\r\nimport React  from 'react';\r\nimport ChatContainer from \"./Chat/ChatContainer\";\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\";\r\nimport AreaMessageContainer from \"./Chat/AreaMessage/AreaMessageContainer\";\r\n\r\nconst Messages = () => {\r\n    return(\r\n        <div className={classes.messages}>\r\n            <DialogsContainer/>\r\n            <ChatContainer/>\r\n            <AreaMessageContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../../../HOC/withAuthRedirect\";\r\nimport Messages from \"./Messages\";\r\nimport {getIsAuth} from \"../../../../Redux/Selectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    withAuthRedirect,\r\n)(Messages)","import React, {useEffect} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n    let state = location.state;\r\n    let from = state ? state.from.pathname : '/profile/my';\r\n\r\n    useEffect(() =>{\r\n        if(props.isAuth === true) return navigate(from, { replace: true });\r\n    },[props.isAuth])\r\n\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        reset();\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>LoginForm</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <input placeholder=\"email\" {...register(\"email\",\r\n                            { required: false ,\r\n                                minLength: 8,\r\n                                maxLength: 20\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.email && errors.email.type ===\"required\" && <p>This field is required</p>}\r\n                    {errors.email && errors.email.type ===\"minLength\" && <p>Min length 8</p>}\r\n                    {errors.email && errors.email.type ===\"maxLength\" && <p>Max length 20</p>}\r\n                </div>\r\n                <div>\r\n                    <input placeholder=\"Password\" type={\"password\"} {...register(\"password\", { required: true })} />\r\n                    {errors.password && errors.password.type ===\"required\" && <p>This field is required</p>}\r\n                </div>\r\n                <div>\r\n                    <input type={\"checkbox\"} {...register(\"rememberMe\")} />Remember me\r\n                </div>\r\n                <div>\r\n                    <button type={\"submit\"}>Submit</button>\r\n                    {props.error === null ? null : <div>{props.error}</div>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../../../Redux/AuthReducer\";\r\nimport {getError, getIsAuth} from \"../../../../Redux/Selectors\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        error: getError(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        login:(email, password, rememberMe) => {\r\n            dispatch(LoginThunk(email, password, rememberMe));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n)(LoginForm);","import classes from './RightBar.module.css';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport Login from \"./Login/LoginContainer\";\r\n\r\n\r\nconst RightBar = () => {\r\n\r\n    return (\r\n        <div className={classes.rightbar_wrapper}>\r\n            <Routes>\r\n                <Route path=\"\" element={<ProfileContainer/>}/>\r\n                <Route path=\"profile/\" element={<ProfileContainer />}>\r\n                    <Route path=\":userID\" element={<ProfileContainer />}/>\r\n                </Route>\r\n                <Route path=\"messages/*\" element={<MessagesContainer/>}>\r\n                    <Route path=\":dialogID\" element={<MessagesContainer/>}/>\r\n                </Route>\r\n                <Route path=\"users/\" element={<UsersContainer />}>\r\n                    <Route path=\":UsersType\" element={<UsersContainer />}/>\r\n                </Route>\r\n                <Route path=\"login\" element={<Login/>}/>\r\n                <Route path=\"*\" element={<h1>404</h1>}/>\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightBar;","import classes from './Body.module.css';\r\nimport LeftBar from \"./LeftBar/LeftBar\";\r\nimport RightBar from \"./RightBar/RightBar\";\r\nimport React  from 'react';\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div className={classes.body_wrapper}>\r\n                <LeftBar/>\r\n                <RightBar/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import classes from './Footer.module.css';\r\nimport React  from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={classes.footer_wrapper}>\r\n            Footer\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import classes from './Header.module.css';\r\nimport React  from 'react';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <div className={classes.header_wrapper}>\r\n            {props.isAuth === true ?  <div className={classes.login}> {props.login} - <button onClick={props.logout}>Logout</button> </div> : 'Unknown Login'}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {useEffect} from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthMeThunk, LogoutThunk} from \"../../Redux/AuthReducer\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nconst HeaderContainer = (props) =>{\r\n\r\n    let {userID} = useParams();\r\n\r\n    useEffect(() => {\r\n        props.AuthMeThunk()\r\n    },userID);\r\n\r\n    return (<Header {...props} />)\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        login: state.Auth.login,\r\n        userID: state.Auth.userID,\r\n        email: state.Auth.email,\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        AuthMeThunk: () => {\r\n            dispatch(AuthMeThunk())\r\n        },\r\n        logout:() => {\r\n            dispatch(LogoutThunk());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HeaderContainer);","import classes from './App.module.css';\r\nimport Body from \"./Component/Body/Body.js\";\r\nimport Footer from \"./Component/Footer/Footer\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport HeaderContainer from \"./Component/Header/HeaderContainer\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthMeThunk} from \"./Redux/AuthReducer\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.AuthMeThunk()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className={classes.app_wrapper}>\r\n                    <HeaderContainer/>\r\n                    <Body/>\r\n                    <Footer/>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        AuthMeThunk: () => {\r\n            dispatch(AuthMeThunk())\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null,mapDispatchToProps),\r\n)(App);\r\n","import React from 'react';\r\nimport './index.module.css';\r\nimport store from \"./Redux/Store-redux\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n    const root = ReactDOM.createRoot(document.getElementById('root'));\r\n    root.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </React.StrictMode>\r\n    );\r\n\r\n"],"sourceRoot":""}